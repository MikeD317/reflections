How did viewing a diff between two versions of a file help you see the bug that was introduced?

It allows you to quickly see any differences in the documents to determine if there's an error.


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It would allow me to be able to go back to earlier versions efficiently to track down mistakes or start over from a prior version.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Being able to manually choose when to commit allows great flexibility; however, if you're not careful you could forget to commit when you really should have.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Probably because some were designed with code-writing in mind and some weren't.

How can you use the commands git log and git diff to view the history of files?

Git log will show you a list of all the commits in the repository.  git diff then allows you to compare two commits.  Earlier versions occur lower on the screen and you press "q" to exit/quit the log and diff.

How might using version control make you more confident to make changes that could break something?

Now that I know how to go back to previous versions, I'm not so worried about breaking a program because I can always restore it to when it worked.

Now that you have your workspace set up, what do you want to try using Git for?

I want to use Git to do the rest of this course and more importantly the Front End Web Developer Nanodegree.
